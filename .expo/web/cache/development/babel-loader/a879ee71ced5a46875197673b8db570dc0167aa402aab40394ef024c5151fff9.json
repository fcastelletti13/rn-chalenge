{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport LoginForm from \"../components/LoginForm\";\nimport MenuList from \"../components//MenuList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    menuItems = _useState4[0],\n    setMenuItems = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    authToken = _useState6[0],\n    setAuthToken = _useState6[1];\n  var handleLogin = function handleLogin(token) {\n    setAuthToken(token);\n    setIsLoggedIn(true);\n  };\n  useEffect(function () {\n    if (authToken) {\n      var mockMenuData = [{\n        id: 1,\n        name: 'Plato 1',\n        price: 10.99\n      }, {\n        id: 2,\n        name: 'Plato 2',\n        price: 12.99\n      }, {\n        id: 3,\n        name: 'Plato 3',\n        price: 8.99\n      }];\n      setMenuItems(mockMenuData);\n    }\n  }, [authToken]);\n  var handleLogout = function handleLogout() {\n    setAuthToken(null);\n    setIsLoggedIn(false);\n    setMenuItems([]);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: isLoggedIn ? _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Men\\xFA del Hotel\"\n      }), _jsx(Button, {\n        title: \"Cerrar Sesi\\xF3n\",\n        onPress: handleLogout\n      }), _jsx(MenuList, {\n        menuItems: menuItems\n      })]\n    }) : _jsx(LoginForm, {\n      onLogin: handleLogin\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 16\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","LoginForm","MenuList","HomeScreen","isLoggedIn","setIsLoggedIn","menuItems","setMenuItems","authToken","setAuthToken","handleLogin","token","mockMenuData","id","name","price","handleLogout","styles","container","title","StyleSheet","create","flex","justifyContent","padding","fontSize","fontWeight","marginBottom"],"sources":["C:/Users/devandroid/Desktop/app-platos/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Button, Alert } from 'react-native';\r\nimport LoginForm from '../components/LoginForm';\r\nimport MenuList from '../components//MenuList';\r\n\r\nconst HomeScreen = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const [authToken, setAuthToken] = useState(null);\r\n\r\n  // Esta función simula una llamada de inicio de sesión exitosa.\r\n  const handleLogin = (token) => {\r\n    setAuthToken(token);\r\n    setIsLoggedIn(true);\r\n    // Realizar una llamada a la API para obtener los platos del menú aquí.\r\n    // Luego, establecer los datos de los platos en el estado usando setMenuItems.\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (authToken) {\r\n      // Aquí puedes realizar una llamada a la API para obtener los platos del menú.\r\n      // Simulación de datos de menú (debes reemplazarlos con tu lógica real).\r\n      const mockMenuData = [\r\n        { id: 1, name: 'Plato 1', price: 10.99 },\r\n        { id: 2, name: 'Plato 2', price: 12.99 },\r\n        { id: 3, name: 'Plato 3', price: 8.99 },\r\n      ];\r\n      setMenuItems(mockMenuData);\r\n    }\r\n  }, [authToken]);\r\n\r\n  const handleLogout = () => {\r\n    setAuthToken(null);\r\n    setIsLoggedIn(false);\r\n    setMenuItems([]);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {isLoggedIn ? (\r\n        <>\r\n          <Text style={styles.title}>Menú del Hotel</Text>\r\n          <Button title=\"Cerrar Sesión\" onPress={handleLogout} />\r\n          <MenuList menuItems={menuItems} />\r\n        </>\r\n      ) : (\r\n        <LoginForm onLogin={handleLogin} />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: 16,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAEnD,OAAOC,SAAS;AAChB,OAAOC,QAAQ;AAAgC;AAAA;AAAA;AAE/C,IAAMC,UAAU,GAAG,SAAbA,UAAU,GAAS;EACvB,gBAAoCJ,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA5CK,UAAU;IAAEC,aAAa;EAChC,iBAAkCN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAvCO,SAAS;IAAEC,YAAY;EAC9B,iBAAkCR,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAzCS,SAAS;IAAEC,YAAY;EAG9B,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,KAAK,EAAK;IAC7BF,YAAY,CAACE,KAAK,CAAC;IACnBN,aAAa,CAAC,IAAI,CAAC;EAGrB,CAAC;EAEDL,SAAS,CAAC,YAAM;IACd,IAAIQ,SAAS,EAAE;MAGb,IAAMI,YAAY,GAAG,CACnB;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE;MAAM,CAAC,EACxC;QAAEF,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE;MAAM,CAAC,EACxC;QAAEF,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE;MAAK,CAAC,CACxC;MACDR,YAAY,CAACK,YAAY,CAAC;IAC5B;EACF,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;EAEf,IAAMQ,YAAY,GAAG,SAAfA,YAAY,GAAS;IACzBP,YAAY,CAAC,IAAI,CAAC;IAClBJ,aAAa,CAAC,KAAK,CAAC;IACpBE,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,OACE,KAAC,IAAI;IAAC,KAAK,EAAEU,MAAM,CAACC,SAAU;IAAA,UAC3Bd,UAAU,GACT;MAAA,WACE,KAAC,IAAI;QAAC,KAAK,EAAEa,MAAM,CAACE,KAAM;QAAA,UAAC;MAAc,EAAO,EAChD,KAAC,MAAM;QAAC,KAAK,EAAC,kBAAe;QAAC,OAAO,EAAEH;MAAa,EAAG,EACvD,KAAC,QAAQ;QAAC,SAAS,EAAEV;MAAU,EAAG;IAAA,EACjC,GAEH,KAAC,SAAS;MAAC,OAAO,EAAEI;IAAY;EACjC,EACI;AAEX,CAAC;AAED,IAAMO,MAAM,GAAGG,UAAU,CAACC,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE;EACX,CAAC;EACDL,KAAK,EAAE;IACLM,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAexB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}