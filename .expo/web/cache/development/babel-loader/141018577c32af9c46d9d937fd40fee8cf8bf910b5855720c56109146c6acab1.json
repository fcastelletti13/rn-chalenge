{"ast":null,"code":"import axios from 'axios';\nvar axiosInstance = axios.create({\n  baseURL: 'https://api.example.com',\n  timeout: 5000\n});\naxiosInstance.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response) {\n    console.error('Error de respuesta:', error.response.data);\n  } else if (error.request) {\n    console.error('Error de solicitud:', error.request);\n  } else {\n    console.error('Error:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","timeout","interceptors","request","use","config","error","Promise","reject","response","console","data","message"],"sources":["C:/Users/devandroid/Desktop/app-platos/src/api/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Crea una instancia de Axios con una configuración base\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'https://api.example.com', // Reemplaza con la URL de tu API\r\n  timeout: 5000, // Tiempo de espera para las solicitudes (en milisegundos)\r\n});\r\n\r\n// Configura interceptores para manejar las solicitudes y respuestas\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    // Puedes agregar encabezados personalizados aquí si es necesario\r\n    // Ejemplo: config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    // Puedes realizar acciones comunes con la respuesta aquí\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Puedes manejar errores comunes aquí\r\n    if (error.response) {\r\n      // Error de respuesta del servidor (por ejemplo, código de estado 4xx o 5xx)\r\n      console.error('Error de respuesta:', error.response.data);\r\n    } else if (error.request) {\r\n      // Error de solicitud (por ejemplo, no se pudo realizar la solicitud)\r\n      console.error('Error de solicitud:', error.request);\r\n    } else {\r\n      // Error general\r\n      console.error('Error:', error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,IAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE,yBAAyB;EAClCC,OAAO,EAAE;AACX,CAAC,CAAC;AAGFH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACpC,UAACC,MAAM,EAAK;EAGV,OAAOA,MAAM;AACf,CAAC,EACD,UAACC,KAAK,EAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CACF;AAEDR,aAAa,CAACI,YAAY,CAACO,QAAQ,CAACL,GAAG,CACrC,UAACK,QAAQ,EAAK;EAEZ,OAAOA,QAAQ;AACjB,CAAC,EACD,UAACH,KAAK,EAAK;EAET,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAElBC,OAAO,CAACJ,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACG,QAAQ,CAACE,IAAI,CAAC;EAC3D,CAAC,MAAM,IAAIL,KAAK,CAACH,OAAO,EAAE;IAExBO,OAAO,CAACJ,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACH,OAAO,CAAC;EACrD,CAAC,MAAM;IAELO,OAAO,CAACJ,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACM,OAAO,CAAC;EACxC;EACA,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CACF;AAED,eAAeR,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}