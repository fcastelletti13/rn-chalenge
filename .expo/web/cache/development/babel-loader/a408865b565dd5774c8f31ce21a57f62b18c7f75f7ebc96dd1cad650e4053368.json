{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AppContext = createContext();\nexport var AppProvider = function AppProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  return _jsx(AppContext.Provider, {\n    value: {\n      user: user,\n      setUser: setUser\n    },\n    children: children\n  });\n};\nexport var useAppContext = function useAppContext() {\n  return useContext(AppContext);\n};","map":{"version":3,"names":["React","createContext","useContext","useState","AppContext","AppProvider","children","user","setUser","useAppContext"],"sources":["C:/Users/devandroid/Desktop/app-platos/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\n// 1. Crear el contexto\r\nconst AppContext = createContext();\r\n\r\n// 2. Crear el componente proveedor\r\nexport const AppProvider = ({ children }) => {\r\n  // Define aquí los estados y funciones que quieras compartir entre componentes\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Puedes agregar más estados y funciones según tus necesidades\r\n\r\n  return (\r\n    <AppContext.Provider value={{ user, setUser }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\n// 3. Crear un hook personalizado para acceder al contexto\r\nexport const useAppContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAGnE,IAAMC,UAAU,GAAGH,aAAa,EAAE;AAGlC,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAW,OAAqB;EAAA,IAAfC,QAAQ,QAARA,QAAQ;EAEpC,gBAAwBH,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA/BI,IAAI;IAAEC,OAAO;EAIpB,OACE,KAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAED,IAAI,EAAJA,IAAI;MAAEC,OAAO,EAAPA;IAAQ,CAAE;IAAA,UAC3CF;EAAQ,EACW;AAE1B,CAAC;AAGD,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAa,GAAS;EACjC,OAAOP,UAAU,CAACE,UAAU,CAAC;AAC/B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}